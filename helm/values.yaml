# Number of replicas for the Deployment
replicas:
  imagefrontend:  1
  chat:   1
  taiapi: 1
  style:  1
  gpt2:   1


# Ports
imagefrontendPort:  8888
chatPort:       3000
taiapiPort:     9000
gpt2HttpPort:   8000
gpt2GrpcPort:   8001
gpt2PromPort:   8002
styleHttpPort:   8000
styleGrpcPort:   8001
stylePromPort:   8002


# Full path (url) to the image and the tag to use
imageRegistry: gcr.io/octonaut-skrum
images:
  chat:
    name: chat
    tag: latest
  imagefrontend:
    name: imagefrontend
    tag: latest
  taiapi:
    name: tai-api
    tag: latest
  gpt2:
    name: gpt2
    tag: latest
  style:
    name: style
    tag: latest

# Hostname for the ingress
hostname:

tolerations: []
## If you want to set tolerations, delete the `[]` in the line above
## and uncomment/fill in this example block
# - key: "octoml.ai/octomizer-platform"
#   operator: "Equal"
#   value: "aws-c6g.large"
#   effect: "NoSchedule"

models:
  gpt2:
    nodeSelector:
      node.kubernetes.io/instance-type: "g4dn.2xlarge"
      #    resources:
      #      limits:
        #        nvidia.com/gpu: 1 # requesting 1 GPU
  style:
    nodeSelector:
      node.kubernetes.io/instance-type: "g4dn.2xlarge"
      #    resources:
      #      limits:
        #        nvidia.com/gpu: 1 # requesting 1 GPU


## If you want to set node selector, delete the `{}` in the line above
## and uncomment/fill in this example block
#  octoml.ai/octomizer-platform: "aws-c6g.large"
#  label-key: "label-value"

prometheus:
  enabled: true
  metricsPort: 8002
  serviceMonitor:
    enabled: false
    prometheusInstance: default
    labels: {}
    honorLabels: false

